import { renderSlot as _renderSlot, withCtx } from "vue";
import type { Slots, VNode, VNodeArrayChildren } from "vue";

export function renderSSRSlot(
  ctx: any,
  slots: Slots,
  name: string,
  props = {},
  // this is not a user-facing function, so the fallback is always generated by
  // the compiler and guaranteed to be a function returning an array
  fallback?: () => VNodeArrayChildren,
  noSlotted?: boolean,
) {
  const result = _renderSlot(slots, name, props, fallback, noSlotted);

  ctx._.__slotsResult = ctx._.__slotsResult || {};
  ctx._.__slotsResult[name] = result;
  return result;
}

export function renderSlot(slotNode: (...args: unknown[]) => VNode, name: string, ctx) {
  return withCtx((...args) => {
    const result = slotNode(...args);
    ctx._.__slotsResult = ctx._.__slotsResult || {};
    ctx._.__slotsResult[name] = result;
    return result;
  });
}
